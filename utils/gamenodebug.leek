include("chain");

/*****************************************************************************
 * GameDebug
 *****************************************************************************/
class GameDebug extends Objects {
  
  static string str = "\n";
  static integer opt = 0;
  static integer ram = 0;
 
  /**
   * str
   **/
  static void display() {
  }
  
  /***
   * arrayDebug
   *
   * internal
   **/
  private static void arrayDebug(Array<any>|Map<any,any> array, integer depth, Array<integer> limit, Array<integer> start, Array<boolean> revers, string space, string debugFunction) {
  }
  
  /***
   * objectDebug
   * @param obj : TYPE_OBJECT => Object ou Objects
   * internal
   **/
  private static void objectDebug(Object|Objects obj, integer depth, Array<integer> limit, Array<integer> start, Array<boolean> revers, string space, string debugFunction) {
  }
  
  /**
   * add
   *
   * ajoute un element a debugger dans la liste a afficher
   **/
  static void add(boolean condition, any element, string txt = "", integer depth = 1, Array<integer> limit = [], Array<integer> start = [], Array<boolean> revers = [], string space = "", string debugFunction = "shortString") {
  }
  
  /**
   * addBackground
   *
   * change la couleur de fond d une liste de cells ou d'un cellId
   **/
  static void addBackground(boolean condition, any cellsOrCellId, integer color = 0) {
  }
  
  /**
   * addOperation
   * calcul les opt et la ram depuis le dernier addOperation et l affiche
   **/
  static void addOperation(boolean condition, string txt = "") {
  }
  
}



