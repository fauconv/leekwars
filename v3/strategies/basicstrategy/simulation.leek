/******************************************************************************
 * Simulation
 * stock l historique des actions qui ont ete faite dans le round associer
 ******************************************************************************/
class Simulation extends Objects {

  Array<Action> actions;
  Round roundObj;
  integer ownerId;
  integer|null remainingMP; // null quand on cree la simulation, il prend une valeur quand on cree la moveCell associer

  /**
   * constructor
   * @param roundObj_simulation : le round ou la simulation sont clone
   **/
  constructor(LeekRound|Simulation leekRound) {
	roundObj = new Round(leekRound.roundObj);
	if(leekRound instanceof LeekRound) {
      actions = [];
	  ownerId = leekRound.id;
	  remainingMP = null;
	} else {
	  actions = clone((leekRound as Simulation).actions,1) as Array<Action>;
	  ownerId = (leekRound as Simulation).ownerId;
	  remainingMP = (leekRound as Simulation).remainingMP;
	}
  }
  constructor(Simulation simulation, integer newRemaingMP, integer usedMP, integer cellId) {
	roundObj = new Round(simulation.roundObj);
	actions = clone(simulation.actions,1) as Array<Action>;
	ownerId = simulation.ownerId;
	remainingMP = newRemaingMP;
	addMoveAction(cellId, usedMP);
  }
  
  /**
   * ajoute une action de type ToolAction et l execute dans le round mais ne fait pas le update du round
   **/
  Object addToolAction(integer toolId, integer targetCell) {
	ToolAction t = new ToolAction(ownerId,toolId, targetCell)
    push(actions, t);
	return t.simulate(roundObj);
  }
	
  /**
   * addMoveAction
   **/
  void addMoveAction(integer CellId, integer usedMP) {
    MoveAction t = new MoveAction(CellId, ownerId, usedMP);
	push(actions, t);
	t.simulate(roundObj);
  }

  /**
   * execute
   **/
  void execute() {
    for(Action a in actions) a.execute();
  }
	
  /**
   * string
   **/
  string string() {
    string ret = "Simulation {\n";
	for(Action a in actions) {
	  ret += "  "+a.string()+"\n";
	}
	return ret+"}";
  }
 
}